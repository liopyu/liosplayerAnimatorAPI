plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    forge {
        mixinConfig "liosplayeranimatorapi-common.mixins.json"
        mixinConfig "liosplayeranimatorapi.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {

    modImplementation 'net.liopyu.liolib:liolib-forge-1.19.2:0.0.2'
    forge "net.minecraftforge:forge:$rootProject.minecraft_version-$rootProject.forge_version"
    modImplementation "lio.liosmultiloaderutils:liosmultiloaderutils-forge-$rootProject.minecraft_version-$rootProject.multiloader_utils_version:$rootProject.multiloader_utils_version"
    //modImplementation "lio.zigysmultiloaderutils:zigysmultiloaderutils-forge-$rootProject.minecraft_version:$rootProject.multiloader_utils_version"
    include "lio.liosmultiloaderutils:liosmultiloaderutils-forge-$rootProject.minecraft_version-$rootProject.multiloader_utils_version:$rootProject.multiloader_utils_version"
    //include "lio.zigysmultiloaderutils:zigysmultiloaderutils-forge-$rootProject.minecraft_version:$rootProject.multiloader_utils_version"

    modApi("com.github.Virtuoel:Pehkui:${pehkui_version}-$rootProject.minecraft_version-forge")

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }


    //modImplementation "mod.liolib.azurelib:azurelib-forge-$rootProject.minecraft_version:$rootProject.azurelib_version"
    modImplementation "dev.kosmx.player-anim:player-animation-lib-forge:${rootProject.player_anim_version}"

    modImplementation "curse.maven:emotecraft-forge-403422:4632464"




}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    filesMatching("META-INF/mods.toml") {
        expand "version": rootProject.version, "player_anim_version": rootProject.player_anim_version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

jar {
    archivesBaseName = "$mod_id-forge-$minecraft_version"
}

sourcesJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
